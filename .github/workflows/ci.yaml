name: CI - Build and Push
on:
  push:
    branches:
      - main
      - dev
      - ci/*
      - cd/*
  workflow_dispatch:

jobs:
  ci:
    runs-on: ubuntu-latest

    outputs:
      short_sha: ${{ steps.set_sha.outputs.short_sha }}

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "temurin"
          cache: maven

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Make application.properties
        run: |
          mkdir -p ./src/main/resources
          touch ./src/main/resources/application.properties
          echo "${{ secrets.PROPERTIES }}" > ./src/main/resources/application.properties
        #         echo "${{ secrets.PROPERTIES }}" | base64 -d > ./src/main/resources/application.properties
        shell: bash

      - name: Build with Maven
        run: mvn -B -DskipTests package --file pom.xml

      - name: Rename jar
        run: mv target/*.jar target/app.jar

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set SHORT_SHA env
        run: echo "SHORT_SHA=${GITHUB_SHA::7}" >> $GITHUB_ENV

      - name: Build and Push Image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_REPOSITORY }}:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_REPOSITORY }}:${{ env.SHORT_SHA }}

      - name: Export SHORT_SHA to output
        id: set_sha
        run: echo "short_sha=${{ env.SHORT_SHA }}" >> $GITHUB_OUTPUT

  cd:
    runs-on: ubuntu-latest
    needs: ci

    env:
      SHORT_SHA: ${{ needs.ci.outputs.short_sha }}
      DEPLOY_BRANCH: cd/37/backend-hosting

    steps:
      - name: Clone team2-infra repository
        uses: actions/checkout@v4
        with:
          repository: CLD-3rd/team2-infra
          token: ${{ secrets.CI_PUSH_PAT }}
          path: team2-infra
          ref: ${{ env.DEPLOY_BRANCH }}

      - name: Update image tag in manifests
        run: |
          sed -i "/savemypodo-app/ s|image:.*|image: ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_REPOSITORY }}:${{ env.SHORT_SHA }}|" \
            team2-infra/manifests/base/savemypodo-app/savemypodo-app.yaml

      - name: Commit and push updated manifest
        run: |
          cd team2-infra
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add manifests/base/savemypodo-app/savemypodo-app.yaml
          git commit -m "Update image tag to ${{ env.SHORT_SHA }}"
          git push origin ${{ env.DEPLOY_BRANCH }}
